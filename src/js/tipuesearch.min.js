
/*
Tipue Search 7.1
Copyright (c) 2019 Tipue
Tipue Search is released under the MIT License
http://www.tipue.com/search
*/


(function ($) {

     $.fn.tipuesearch = function (options) {

          var set = $.extend({

               'contextBuffer': 60,
               'contextLength': 60,
               'contextStart': 0,
               'debug': false,
               'descriptiveWords': 25,
               'footerPages': 3,
               'highlightTerms': true,
               'imageZoom': true,
               'minimumLength': 3,
               'newWindow': false,
               'show': 10,
               'showContext': true,
               'showRelated': true,
               'showTime': false,
               'showTitleCount': true,
               'showURL': true,
               'wholeWords': true
          }, options);

          return this.each(function () {

               var tipuesearch_t_c = 0;

               var tipue_search_w = '';
               if (set.newWindow) {
                    tipue_search_w = ' target="_blank"';
               }

               function getURLP(name) {
                    var locSearch = location.search;
                    var splitted = (new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(locSearch) || [, ""]);
                    var searchString = splitted[1].replace(/\+/g, '%20');
                    try {
                         searchString = decodeURIComponent(searchString);
                    }
                    catch (e) {
                         searchString = unescape(searchString);
                    }
                    return searchString || null;
               }

               if (getURLP('q')) {
                    const pageNumber = Number(getURLP('p')) || 0;
                    $('#tipue_search_input').val(getURLP('q'));
                    getTipueSearch(pageNumber * 10, true);
               }

               $(this).keyup(function (event) {
                    if (event.keyCode == '13') {
                         getTipueSearch(0, true);
                    }
               });


               function getTipueSearch(start, replace) {
                    window.scrollTo(0, 0);

                    var out = '';
                    var show_replace = false;
                    var show_stop = false;
                    var standard = true;
                    var c = 0;
                    var found = [];

                    var d_o = $('#tipue_search_input').val();
                    d_o = d_o.replace(/\+/g, ' ').replace(/\s\s+/g, ' ');

                    d_o = $.trim(d_o);
                    var d = d_o.toLowerCase();

                    if ((d.match("^\"") && d.match("\"$")) || (d.match("^'") && d.match("'$"))) {
                         standard = false;
                    }

                    var d_w = d.split(' ');

                    if (standard) {
                         d = '';
                         for (var i = 0; i < d_w.length; i++) {
                              var a_w = true;
                              for (var f = 0; f < tipuesearch_stop_words.length; f++) {
                                   if (d_w[i] == tipuesearch_stop_words[f]) {
                                        a_w = false;
                                        show_stop = true;
                                   }
                              }
                              if (a_w) {
                                   d = d + ' ' + d_w[i];
                              }
                         }
                         d = $.trim(d);
                         d_w = d.split(' ');
                    }
                    else {
                         d = d.substring(1, d.length - 1);
                    }

                    if (d.length >= set.minimumLength) {
                         if (standard) {
                              if (replace) {
                                   var d_r = d;
                                   for (var i = 0; i < d_w.length; i++) {
                                        for (var f = 0; f < tipuesearch_replace.words.length; f++) {
                                             if (d_w[i] == tipuesearch_replace.words[f].word) {
                                                  d = d.replace(d_w[i], tipuesearch_replace.words[f].replace_with);
                                                  show_replace = true;
                                             }
                                        }
                                   }
                                   d_w = d.split(' ');
                              }

                              var d_t = d;
                              for (var i = 0; i < d_w.length; i++) {
                                   for (var f = 0; f < tipuesearch_stem.words.length; f++) {
                                        if (d_w[i] == tipuesearch_stem.words[f].word) {
                                             d_t = d_t + ' ' + tipuesearch_stem.words[f].stem;
                                        }
                                   }
                              }
                              d_w = d_t.split(' ');

                              for (var i = 0; i < tipuesearch.pages.length; i++) {
                                   var score = 0;
                                   var s_t = tipuesearch.pages[i].text;
                                   for (var f = 0; f < d_w.length; f++) {
                                        if (set.wholeWords) {
                                             var pat = new RegExp('\\b' + d_w[f] + '\\b', 'gi');
                                        }
                                        else {
                                             var pat = new RegExp(d_w[f], 'gi');
                                        }
                                        if (tipuesearch.pages[i].title.search(pat) != -1) {
                                             var m_c = tipuesearch.pages[i].title.match(pat).length;
                                             score += (20 * m_c);
                                        }
                                        if (tipuesearch.pages[i].tags) {
                                             if (tipuesearch.pages[i].tags.search(pat) != -1) {
                                                  var m_c = tipuesearch.pages[i].tags.match(pat).length;
                                                  score += (10 * m_c);
                                             }
                                        }
                                        if (tipuesearch.pages[i].url.search(pat) != -1) {
                                             score += 20;
                                        }

                                        if (score != 0) {
                                             if (tipuesearch.pages[i].hasSearchExcerpt) {
                                                  score += 1000;
                                             }
                                             for (var e = 0; e < tipuesearch_weight.weight.length; e++) {
                                                  if (tipuesearch.pages[i].url == tipuesearch_weight.weight[e].url) {
                                                       score += tipuesearch_weight.weight[e].score;
                                                  }
                                             }
                                        }

                                        if (d_w[f].match('^-')) {
                                             pat = new RegExp(d_w[f].substring(1), 'i');
                                             if (tipuesearch.pages[i].title.search(pat) != -1 || tipuesearch.pages[i].text.search(pat) != -1 || tipuesearch.pages[i].tags.search(pat) != -1) {
                                                  score = 0;
                                             }
                                        }
                                   }

                                   if (score != 0) {
                                        found.push(
                                             {
                                                  "score": score,
                                                  "title": tipuesearch.pages[i].title,
                                                  "desc": s_t,
                                                  "img": tipuesearch.pages[i].img,
                                                  "url": tipuesearch.pages[i].url,
                                                  "note": tipuesearch.pages[i].note
                                             });
                                        c++;
                                   }
                              }
                         }
                         else {
                              for (var i = 0; i < tipuesearch.pages.length; i++) {
                                   var score = 0;
                                   var s_t = tipuesearch.pages[i].text;
                                   var pat = new RegExp(d, 'gi');
                                   if (tipuesearch.pages[i].title.search(pat) != -1) {
                                        var m_c = tipuesearch.pages[i].title.match(pat).length;
                                        score += (20 * m_c);
                                   }
                                   if (tipuesearch.pages[i].text.search(pat) != -1) {
                                        var m_c = tipuesearch.pages[i].text.match(pat).length;
                                        score += (20 * m_c);
                                   }
                                   if (tipuesearch.pages[i].tags) {
                                        if (tipuesearch.pages[i].tags.search(pat) != -1) {
                                             var m_c = tipuesearch.pages[i].tags.match(pat).length;
                                             score += (10 * m_c);
                                        }
                                   }
                                   if (tipuesearch.pages[i].hasSearchExcerpt) {
                                        score += 50;
                                   }
                                   if (tipuesearch.pages[i].url.search(pat) != -1) {
                                        score += 20;
                                   }
                                   if (score != 0) {
                                        for (var e = 0; e < tipuesearch_weight.weight.length; e++) {
                                             if (tipuesearch.pages[i].url == tipuesearch_weight.weight[e].url) {
                                                  score += tipuesearch_weight.weight[e].score;
                                             }
                                        }
                                   }

                                   if (score != 0) {
                                        found.push(
                                             {
                                                  "score": score,
                                                  "title": tipuesearch.pages[i].title,
                                                  "desc": s_t,
                                                  "img": tipuesearch.pages[i].img,
                                                  "url": tipuesearch.pages[i].url,
                                                  "note": tipuesearch.pages[i].note
                                             });
                                        c++;
                                   }
                              }
                         }

                         if (c != 0) {
                              if (set.showTitleCount && tipuesearch_t_c == 0) {
                                   var title = document.title;
                                   document.title = '(' + c + ') ' + title;
                                   tipuesearch_t_c++;
                              }

                              if (c == 1) {
                                   out += '<div id="tipue_search_results_count">Found <strong>1</strong> matching result';
                              }
                              else {
                                   var c_c = c.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                   out += '<div id="tipue_search_results_count">Found <strong>' + c_c + ' ' + '</strong> matching results';
                              }
                              if (set.showTime) {
                                   var endTimer = new Date().getTime();
                                   var time = (endTimer - startTimer) / 1000;
                                   out += ' (' + time.toFixed(2) + ' ' + tipuesearch_string_14 + ')';
                                   set.showTime = false;
                              }
                              out += '</div>';

                              if (set.showRelated && standard) {
                                   var ront = '';
                                   f = 0;
                                   for (var i = 0; i < tipuesearch_related.Related.length; i++) {
                                        if (d == tipuesearch_related.Related[i].search) {
                                             if (!f) {
                                                  out += '<div class="tipue_search_related">' + tipuesearch_string_10 + ': ';
                                             }
                                             if (show_replace) {
                                                  d_o = d;
                                             }

                                             if (tipuesearch_related.Related[i].include) {
                                                  var r_d = d_o + ' ' + tipuesearch_related.Related[i].related;
                                             }
                                             else {
                                                  var r_d = tipuesearch_related.Related[i].related;
                                             }

                                             ront += '<a class="tipue_search_related_btn" id="' + r_d + '">' + tipuesearch_related.Related[i].related + '</a>, ';
                                             f++;
                                        }
                                   }
                                   if (f) {
                                        ront = ront.slice(0, -2);
                                        ront += '.</div>';
                                        out += ront;
                                   }
                              }

                              if (show_replace) {
                                   out += '<div id="tipue_search_replace">' + tipuesearch_string_2 + ' ' + d + '. ' + tipuesearch_string_3 + ' <a id="tipue_search_replaced">' + d_r + '</a></div>';
                              }

                              found.sort(function (a, b) { return b.score - a.score });

                              var l_o = 0;

                              if (set.imageZoom) {
                                   out += '<div id="tipue_search_image_modal"><div class="tipue_search_image_close">&#10005;</div><div class="tipue_search_image_block"><a id="tipue_search_zoom_url"><img id="tipue_search_zoom_img"></a><div id="tipue_search_zoom_text"></div></div></div>';
                              }

                              out += '<ul class="nhsuk-list nhsuk-list--border nhsuk-u-margin-top-3" start="1">'
                              for (var i = 0; i < found.length; i++) {
                                   if (l_o >= start && l_o < set.show + start) {
                                        out += '<li class="tipue_search_result">';

                                        out += '<h2 class="nhsuk-u-margin-bottom-1" style="font-weight: 400;font-size: 19px"><a href="' + found[i].url + '"' + tipue_search_w + '>' + found[i].title + '</a></h2>';

                                        if (set.debug) {
                                             out += '<div class="tipue_search_content_debug">Score: ' + found[i].score + '</div>';
                                        }

                                        if (set.showURL) {
                                             var s_u = found[i].url.toLowerCase();
                                             if (s_u.indexOf('http://') == 0) {
                                                  s_u = s_u.slice(7);
                                             }
                                             out += '<div class="tipue_search_content_url"><a href="' + found[i].url + '"' + tipue_search_w + '>' + s_u + '</a></div>';
                                        }

                                        if (found[i].img) {
                                             if (set.imageZoom) {
                                                  out += '<div class="tipue_search_image"><img class="tipue_search_img tipue_search_image_zoom" src="' + found[i].img + '" alt="' + found[i].title + '" data-url="' + found[i].url + '"></div>';
                                             }
                                             else {
                                                  out += '<div class="tipue_search_image"><a href="' + found[i].url + '"' + tipue_search_w + '><img class="tipue_search_img" src="' + found[i].img + '" alt="' + found[i].title + '"></a></div>';
                                             }
                                        }

                                        if (found[i].desc) {
                                             var t = found[i].desc;

                                             if (set.showContext) {
                                                  d_w = d.split(' ');
                                                  var s_1 = found[i].desc.toLowerCase().indexOf(d_w[0]);
                                                  if (s_1 > set.contextStart) {
                                                       var t_1 = t.substr(s_1 - set.contextBuffer);
                                                       var s_2 = t_1.indexOf(' ');
                                                       t_1 = t.substr(s_1 - set.contextBuffer + s_2);
                                                       t_1 = $.trim(t_1);
                                                  }
                                             }

                                             if (standard) {
                                                  d_w = d.split(' ');
                                                  for (var f = 0; f < d_w.length; f++) {
                                                       if (set.highlightTerms) {
                                                            var patr = new RegExp('(' + d_w[f] + ')', 'gi');
                                                            t = t.replace(patr, "<h0011>$1<h0012>");
                                                       }
                                                  }
                                             }
                                             else if (set.highlightTerms) {
                                                  var patr = new RegExp('(' + d + ')', 'gi');
                                                  t = t.replace(patr, "<span class=\"tipue_search_content_bold\">$1</span>");
                                             }

                                             var t_d = '';
                                             var t_w = t.split(' ');
                                             if (t_w.length < set.descriptiveWords) {
                                                  t_d = t;
                                             }
                                             else {
                                                  for (var f = 0; f < set.descriptiveWords; f++) {
                                                       t_d += t_w[f] + ' ';
                                                  }
                                             }
                                             t_d = $.trim(t_d);
                                             if (t_d.length > set.contextLength) {
                                                  t_d += '...';
                                             }

                                             t_d = t_d.replace(/h0011/g, 'span class=\"tipue_search_content_bold\"');
                                             t_d = t_d.replace(/h0012/g, '/span');

                                             out += '<p class="nhsuk-body-s nhsuk-u-margin-top-1">' + t_d + '</p>';
                                        }

                                        if (found[i].note) {
                                             out += '<div class="tipue_search_note">' + found[i].note + '</div>';
                                        }

                                        out += '</li>';
                                   }
                                   l_o++;
                              }

                              out += '</ul>';

                              if (c > set.show) {
                                   var pages = Math.ceil(c / set.show);
                                   var page = (start / set.show);

                                   out += '<nav class="nhsuk-pagination" role="navigation" aria-label="Pagination"><ul class="nhsuk-list nhsuk-pagination__list">';

                                   if (start > 0) {
                                        const previousPageLink = `${location.pathname}?q=${getURLP('q')}&p=${page - 1}`
                                        out += `<li class="nhsuk-pagination-item--previous">
                                                       <a class="nhsuk-pagination__link nhsuk-pagination__link--prev tipue_search_foot_box" href="${previousPageLink}">
                                                            <span class="nhsuk-pagination__title">Previous</span>
                                                            <span class="nhsuk-u-visually-hidden">:</span>
                                                            <span class="nhsuk-pagination__page">Page ${page} of ${pages}</span>
                                                            <svg class="nhsuk-icon nhsuk-icon__arrow-left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                                                                 aria-hidden="true">
                                                                 <path
                                                                      d="M4.1 12.3l2.7 3c.2.2.5.2.7 0 .1-.1.1-.2.1-.3v-2h11c.6 0 1-.4 1-1s-.4-1-1-1h-11V9c0-.2-.1-.4-.3-.5h-.2c-.1 0-.3.1-.4.2l-2.7 3c0 .2 0 .4.1.6z">
                                                                 </path>
                                                            </svg>
                                                       </a>
                                                  </li>`;
                                   }

                                   if (page + 1 != pages) {
                                        const nextPageLink = `${location.pathname}?q=${getURLP('q')}&p=${page + 1}`
                                        out += `<li class="nhsuk-pagination-item--next">
                                                  <a class="nhsuk-pagination__link nhsuk-pagination__link--next"
                                                       href="${nextPageLink}" rel="next">
                                                       <span class="nhsuk-pagination__title">Next</span>
                                                       <span class="nhsuk-u-visually-hidden">:</span>
                                                       <span class="nhsuk-pagination__page">Page ${page + 2} of ${pages}</span>
                                                       <svg class="nhsuk-icon nhsuk-icon__arrow-right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                                                            aria-hidden="true">
                                                            <path
                                                                 d="M19.6 11.66l-2.73-3A.51.51 0 0 0 16 9v2H5a1 1 0 0 0 0 2h11v2a.5.5 0 0 0 .32.46.39.39 0 0 0 .18 0 .52.52 0 0 0 .37-.16l2.73-3a.5.5 0 0 0 0-.64z">
                                                            </path>
                                                       </svg>
                                                  </a>
                                             </li>`;
                                   }

                                   out += '</ul></div>';
                              }

                         }
                         else {
                              out += '<div id="tipue_search_error"><div class="nhsuk-grid-column-two-thirds"><h2>No results found for ' + d + '</h2><p>Improve your search results by:</p>        <ul class="nhsuk-list nhsuk-list--bullet"><li>double-checking your spelling</li><li>using fewer keywords</li><li>searching a reference number</li></ul></div></div>';
                         }
                    }
                    else {
                         if (show_stop) {
                              out += '<div id="tipue_search_error">' + tipuesearch_string_8 + ' ' + tipuesearch_string_9 + '</div>';
                         }
                         else {
                              if (set.minimumLength == 1) {
                                   out += '<div id="tipue_search_error">' + tipuesearch_string_11 + '</div>';
                              }
                              else {
                                   out += '<div id="tipue_search_error">' + tipuesearch_string_12 + ' ' + set.minimumLength + ' ' + tipuesearch_string_13 + '</div>';
                              }
                         }
                    }

                    $('#tipue_search_content').html(out);
               }

          });
     };

})(jQuery);
